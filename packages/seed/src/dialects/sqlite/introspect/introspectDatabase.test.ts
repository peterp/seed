import { describe, expect, test } from "vitest";
import { betterSqlite3 } from "#test/sqlite/better-sqlite3/index.js";
import {
  basicIntrospectDatabase,
  introspectDatabase,
} from "./introspectDatabase.js";

const adapters = {
  betterSqlite3: () => betterSqlite3,
};

describe.concurrent.each(["betterSqlite3"] as const)(
  "introspectDatabase: %s",
  (adapter) => {
    const { createTestDb, createChinookSqliteTestDatabase } =
      adapters[adapter]();

    test("basicIntrospectDatabase should return basic database structure", async () => {
      const structure = `
    CREATE TABLE "Table1" (
      id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
      name TEXT
    );
  `;
      const { client } = await createTestDb(structure);

      const result = await basicIntrospectDatabase(client);
      expect(result).toEqual({
        tables: [
          {
            columns: [
              {
                affinity: "integer",
                constraints: ["p"],
                default: null,
                id: "Table1.id",
                name: "id",
                nullable: false,
                table: "Table1",
                type: "INTEGER",
              },
              {
                affinity: "text",
                default: null,
                constraints: [],
                id: "Table1.name",
                name: "name",
                nullable: true,
                table: "Table1",
                type: "TEXT",
              },
            ],
            id: "Table1",
            name: "Table1",
            type: "table",
            strict: 0,
            wr: 0,
          },
        ],
      });
    });

    test("introspectDatabase should return basic database structure", async () => {
      const structure = `
    CREATE TABLE "Table1" (
      id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
      name TEXT
    );
  `;
      const { client } = await createTestDb(structure);

      const result = await introspectDatabase(client);
      expect(result).toEqual({
        sequences: [
          {
            colId: "id",
            current: 1,
            name: "Table1_id_seq",
            tableId: "Table1",
          },
        ],
        tables: [
          {
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "id",
                  type: "INTEGER",
                },
              ],
              table: "Table1",
              tableId: "Table1",
            },
            children: [],
            parents: [],
            constraints: [
              {
                columns: ["id"],
                dirty: false,
                name: "Table1_pkey",
                table: "Table1",
                tableId: "Table1",
              },
            ],
            columns: [
              {
                affinity: "integer",
                constraints: ["p"],
                default: null,
                id: "Table1.id",
                name: "id",
                nullable: false,
                table: "Table1",
                type: "INTEGER",
                identity: {
                  current: 1,
                  name: "Table1_id_seq",
                },
              },
              {
                affinity: "text",
                default: null,
                identity: null,
                constraints: [],
                id: "Table1.name",
                name: "name",
                nullable: true,
                table: "Table1",
                type: "TEXT",
              },
            ],
            id: "Table1",
            name: "Table1",
            type: "table",
            strict: 0,
            wr: 0,
          },
        ],
      });
    });

    test("introspectDatabase table without rowid", async () => {
      const structure = `
    CREATE TABLE "Table1" (
      id INTEGER PRIMARY KEY NOT NULL,
      name TEXT
    ) WITHOUT ROWID;
  `;
      const { client } = await createTestDb(structure);

      const result = await introspectDatabase(client);
      expect(result).toEqual({
        sequences: [
          {
            colId: "id",
            current: 1,
            name: "Table1_id_seq",
            tableId: "Table1",
          },
        ],
        tables: [
          {
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "id",
                  type: "INTEGER",
                },
              ],
              table: "Table1",
              tableId: "Table1",
            },
            children: [],
            parents: [],
            constraints: [
              {
                columns: ["id"],
                dirty: false,
                name: "Table1_pkey",
                table: "Table1",
                tableId: "Table1",
              },
            ],
            columns: [
              {
                affinity: "integer",
                constraints: ["p"],
                default: null,
                id: "Table1.id",
                name: "id",
                nullable: false,
                table: "Table1",
                type: "INTEGER",
                identity: {
                  current: 1,
                  name: "Table1_id_seq",
                },
              },
              {
                affinity: "text",
                default: null,
                identity: null,
                constraints: [],
                id: "Table1.name",
                name: "name",
                nullable: true,
                table: "Table1",
                type: "TEXT",
              },
            ],
            id: "Table1",
            name: "Table1",
            type: "table",
            strict: 0,
            wr: 1,
          },
        ],
      });
    });

    test("introspectDatabase table without pk", async () => {
      const structure = `
    CREATE TABLE "Table1" (
      name TEXT
    );
  `;
      const { client } = await createTestDb(structure);

      const result = await introspectDatabase(client);
      expect(result).toEqual({
        sequences: [
          {
            colId: "rowid",
            current: 1,
            name: "Table1_rowid_seq",
            tableId: "Table1",
          },
        ],
        tables: [
          {
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "rowid",
                  type: "INTEGER",
                },
              ],
              table: "Table1",
              tableId: "Table1",
            },
            children: [],
            parents: [],
            constraints: [],
            columns: [
              {
                affinity: "integer",
                constraints: ["p"],
                default: null,
                id: "Table1.rowid",
                name: "rowid",
                nullable: false,
                table: "Table1",
                type: "INTEGER",
                identity: {
                  current: 1,
                  name: "Table1_rowid_seq",
                },
              },
              {
                affinity: "text",
                default: null,
                identity: null,
                constraints: [],
                id: "Table1.name",
                name: "name",
                nullable: true,
                table: "Table1",
                type: "TEXT",
              },
            ],
            id: "Table1",
            name: "Table1",
            type: "table",
            strict: 0,
            wr: 0,
          },
        ],
      });
    });

    test("basicIntrospectDatabase on chinook example database", async () => {
      const { client } = await createChinookSqliteTestDatabase();

      const result = await basicIntrospectDatabase(client);

      expect(result).toEqual({
        tables: [
          {
            id: "albums",
            name: "albums",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "albums.AlbumId",
                name: "AlbumId",
                type: "INTEGER",
                affinity: "integer",
                table: "albums",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "albums.Title",
                name: "Title",
                type: "NVARCHAR(160)",
                affinity: "text",
                table: "albums",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "albums.ArtistId",
                name: "ArtistId",
                type: "INTEGER",
                affinity: "integer",
                table: "albums",
                nullable: false,
                default: null,
                constraints: ["f"],
              },
            ],
          },
          {
            id: "artists",
            name: "artists",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "artists.ArtistId",
                name: "ArtistId",
                type: "INTEGER",
                affinity: "integer",
                table: "artists",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "artists.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "artists",
                nullable: true,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "customers",
            name: "customers",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "customers.CustomerId",
                name: "CustomerId",
                type: "INTEGER",
                affinity: "integer",
                table: "customers",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "customers.FirstName",
                name: "FirstName",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "customers.LastName",
                name: "LastName",
                type: "NVARCHAR(20)",
                affinity: "text",
                table: "customers",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "customers.Company",
                name: "Company",
                type: "NVARCHAR(80)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.Address",
                name: "Address",
                type: "NVARCHAR(70)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.City",
                name: "City",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.State",
                name: "State",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.Country",
                name: "Country",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.PostalCode",
                name: "PostalCode",
                type: "NVARCHAR(10)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.Phone",
                name: "Phone",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.Fax",
                name: "Fax",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "customers.Email",
                name: "Email",
                type: "NVARCHAR(60)",
                affinity: "text",
                table: "customers",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "customers.SupportRepId",
                name: "SupportRepId",
                type: "INTEGER",
                affinity: "integer",
                table: "customers",
                nullable: true,
                default: null,
                constraints: ["f"],
              },
            ],
          },
          {
            id: "employees",
            name: "employees",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "employees.EmployeeId",
                name: "EmployeeId",
                type: "INTEGER",
                affinity: "integer",
                table: "employees",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "employees.LastName",
                name: "LastName",
                type: "NVARCHAR(20)",
                affinity: "text",
                table: "employees",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "employees.FirstName",
                name: "FirstName",
                type: "NVARCHAR(20)",
                affinity: "text",
                table: "employees",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "employees.Title",
                name: "Title",
                type: "NVARCHAR(30)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.ReportsTo",
                name: "ReportsTo",
                type: "INTEGER",
                affinity: "integer",
                table: "employees",
                nullable: true,
                default: null,
                constraints: ["f"],
              },
              {
                id: "employees.BirthDate",
                name: "BirthDate",
                type: "DATETIME",
                affinity: "null",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.HireDate",
                name: "HireDate",
                type: "DATETIME",
                affinity: "null",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.Address",
                name: "Address",
                type: "NVARCHAR(70)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.City",
                name: "City",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.State",
                name: "State",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.Country",
                name: "Country",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.PostalCode",
                name: "PostalCode",
                type: "NVARCHAR(10)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.Phone",
                name: "Phone",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.Fax",
                name: "Fax",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "employees.Email",
                name: "Email",
                type: "NVARCHAR(60)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "genres",
            name: "genres",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "genres.GenreId",
                name: "GenreId",
                type: "INTEGER",
                affinity: "integer",
                table: "genres",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "genres.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "genres",
                nullable: true,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "invoice_items",
            name: "invoice_items",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "invoice_items.InvoiceLineId",
                name: "InvoiceLineId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "invoice_items.InvoiceId",
                name: "InvoiceId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: ["f"],
              },
              {
                id: "invoice_items.TrackId",
                name: "TrackId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: ["f"],
              },
              {
                id: "invoice_items.UnitPrice",
                name: "UnitPrice",
                type: "NUMERIC(10,2)",
                affinity: "text",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "invoice_items.Quantity",
                name: "Quantity",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "invoices",
            name: "invoices",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "invoices.InvoiceId",
                name: "InvoiceId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "invoices.CustomerId",
                name: "CustomerId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: ["f"],
              },
              {
                id: "invoices.InvoiceDate",
                name: "InvoiceDate",
                type: "DATETIME",
                affinity: "text",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "invoices.BillingAddress",
                name: "BillingAddress",
                type: "NVARCHAR(70)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "invoices.BillingCity",
                name: "BillingCity",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "invoices.BillingState",
                name: "BillingState",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "invoices.BillingCountry",
                name: "BillingCountry",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "invoices.BillingPostalCode",
                name: "BillingPostalCode",
                type: "NVARCHAR(10)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "invoices.Total",
                name: "Total",
                type: "NUMERIC(10,2)",
                affinity: "text",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "media_types",
            name: "media_types",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "media_types.MediaTypeId",
                name: "MediaTypeId",
                type: "INTEGER",
                affinity: "integer",
                table: "media_types",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "media_types.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "media_types",
                nullable: true,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "playlist_track",
            name: "playlist_track",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "playlist_track.PlaylistId",
                name: "PlaylistId",
                type: "INTEGER",
                affinity: "integer",
                table: "playlist_track",
                nullable: false,
                default: null,
                constraints: ["f", "p"],
              },
              {
                id: "playlist_track.TrackId",
                name: "TrackId",
                type: "INTEGER",
                affinity: "integer",
                table: "playlist_track",
                nullable: false,
                default: null,
                constraints: ["f", "p"],
              },
            ],
          },
          {
            id: "playlists",
            name: "playlists",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "playlists.PlaylistId",
                name: "PlaylistId",
                type: "INTEGER",
                affinity: "integer",
                table: "playlists",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "playlists.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "playlists",
                nullable: true,
                default: null,
                constraints: [],
              },
            ],
          },
          {
            id: "tracks",
            name: "tracks",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "tracks.TrackId",
                name: "TrackId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: ["p"],
              },
              {
                id: "tracks.Name",
                name: "Name",
                type: "NVARCHAR(200)",
                affinity: "text",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "tracks.AlbumId",
                name: "AlbumId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: ["f"],
              },
              {
                id: "tracks.MediaTypeId",
                name: "MediaTypeId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: ["f"],
              },
              {
                id: "tracks.GenreId",
                name: "GenreId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: ["f"],
              },
              {
                id: "tracks.Composer",
                name: "Composer",
                type: "NVARCHAR(220)",
                affinity: "text",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "tracks.Milliseconds",
                name: "Milliseconds",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: [],
              },
              {
                id: "tracks.Bytes",
                name: "Bytes",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: [],
              },
              {
                id: "tracks.UnitPrice",
                name: "UnitPrice",
                type: "NUMERIC(10,2)",
                affinity: "text",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: [],
              },
            ],
          },
        ],
      });
    });

    test("IntrospectDatabase on chinook example database", async () => {
      const { client } = await createChinookSqliteTestDatabase();

      const result = await introspectDatabase(client);

      expect(result).toEqual({
        tables: [
          {
            id: "albums",
            name: "albums",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "AlbumId",
                  type: "INTEGER",
                },
              ],
              table: "albums",
              tableId: "albums",
            },
            columns: [
              {
                id: "albums.AlbumId",
                name: "AlbumId",
                type: "INTEGER",
                affinity: "integer",
                table: "albums",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 348,
                  name: "albums_AlbumId_seq",
                },
              },
              {
                id: "albums.Title",
                name: "Title",
                type: "NVARCHAR(160)",
                affinity: "text",
                table: "albums",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "albums.ArtistId",
                name: "ArtistId",
                type: "INTEGER",
                affinity: "integer",
                table: "albums",
                nullable: false,
                default: null,
                constraints: ["f"],
                identity: null,
              },
            ],
            parents: [
              {
                id: "albums_ArtistId_fkey",
                fkTable: "albums",
                targetTable: "artists",
                keys: [
                  {
                    fkColumn: "ArtistId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "ArtistId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            children: [
              {
                id: "tracks_AlbumId_fkey",
                fkTable: "tracks",
                targetTable: "albums",
                keys: [
                  {
                    fkColumn: "AlbumId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "AlbumId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "albums",
                table: "albums",
                dirty: false,
                name: "albums_pkey",
                columns: ["AlbumId"],
              },
            ],
          },
          {
            id: "artists",
            name: "artists",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "ArtistId",
                  type: "INTEGER",
                },
              ],
              table: "artists",
              tableId: "artists",
            },
            columns: [
              {
                id: "artists.ArtistId",
                name: "ArtistId",
                type: "INTEGER",
                affinity: "integer",
                table: "artists",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 276,
                  name: "artists_ArtistId_seq",
                },
              },
              {
                id: "artists.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "artists",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [],
            children: [
              {
                id: "albums_ArtistId_fkey",
                fkTable: "albums",
                targetTable: "artists",
                keys: [
                  {
                    fkColumn: "ArtistId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "ArtistId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "artists",
                table: "artists",
                dirty: false,
                name: "artists_pkey",
                columns: ["ArtistId"],
              },
            ],
          },
          {
            id: "customers",
            name: "customers",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "CustomerId",
                  type: "INTEGER",
                },
              ],
              table: "customers",
              tableId: "customers",
            },
            columns: [
              {
                id: "customers.CustomerId",
                name: "CustomerId",
                type: "INTEGER",
                affinity: "integer",
                table: "customers",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 60,
                  name: "customers_CustomerId_seq",
                },
              },
              {
                id: "customers.FirstName",
                name: "FirstName",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.LastName",
                name: "LastName",
                type: "NVARCHAR(20)",
                affinity: "text",
                table: "customers",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.Company",
                name: "Company",
                type: "NVARCHAR(80)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.Address",
                name: "Address",
                type: "NVARCHAR(70)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.City",
                name: "City",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.State",
                name: "State",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.Country",
                name: "Country",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.PostalCode",
                name: "PostalCode",
                type: "NVARCHAR(10)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.Phone",
                name: "Phone",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.Fax",
                name: "Fax",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "customers",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.Email",
                name: "Email",
                type: "NVARCHAR(60)",
                affinity: "text",
                table: "customers",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "customers.SupportRepId",
                name: "SupportRepId",
                type: "INTEGER",
                affinity: "integer",
                table: "customers",
                nullable: true,
                default: null,
                constraints: ["f"],
                identity: null,
              },
            ],
            parents: [
              {
                id: "customers_SupportRepId_fkey",
                fkTable: "customers",
                targetTable: "employees",
                keys: [
                  {
                    fkColumn: "SupportRepId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "EmployeeId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
            ],
            children: [
              {
                id: "invoices_CustomerId_fkey",
                fkTable: "invoices",
                targetTable: "customers",
                keys: [
                  {
                    fkColumn: "CustomerId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "CustomerId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "customers",
                table: "customers",
                dirty: false,
                name: "customers_pkey",
                columns: ["CustomerId"],
              },
            ],
          },
          {
            id: "employees",
            name: "employees",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "EmployeeId",
                  type: "INTEGER",
                },
              ],
              table: "employees",
              tableId: "employees",
            },
            columns: [
              {
                id: "employees.EmployeeId",
                name: "EmployeeId",
                type: "INTEGER",
                affinity: "integer",
                table: "employees",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 9,
                  name: "employees_EmployeeId_seq",
                },
              },
              {
                id: "employees.LastName",
                name: "LastName",
                type: "NVARCHAR(20)",
                affinity: "text",
                table: "employees",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.FirstName",
                name: "FirstName",
                type: "NVARCHAR(20)",
                affinity: "text",
                table: "employees",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.Title",
                name: "Title",
                type: "NVARCHAR(30)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.ReportsTo",
                name: "ReportsTo",
                type: "INTEGER",
                affinity: "integer",
                table: "employees",
                nullable: true,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "employees.BirthDate",
                name: "BirthDate",
                type: "DATETIME",
                affinity: "null",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.HireDate",
                name: "HireDate",
                type: "DATETIME",
                affinity: "null",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.Address",
                name: "Address",
                type: "NVARCHAR(70)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.City",
                name: "City",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.State",
                name: "State",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.Country",
                name: "Country",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.PostalCode",
                name: "PostalCode",
                type: "NVARCHAR(10)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.Phone",
                name: "Phone",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.Fax",
                name: "Fax",
                type: "NVARCHAR(24)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "employees.Email",
                name: "Email",
                type: "NVARCHAR(60)",
                affinity: "text",
                table: "employees",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [
              {
                id: "employees_ReportsTo_fkey",
                fkTable: "employees",
                targetTable: "employees",
                keys: [
                  {
                    fkColumn: "ReportsTo",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "EmployeeId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
            ],
            children: [
              {
                id: "customers_SupportRepId_fkey",
                fkTable: "customers",
                targetTable: "employees",
                keys: [
                  {
                    fkColumn: "SupportRepId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "EmployeeId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
              {
                id: "employees_ReportsTo_fkey",
                fkTable: "employees",
                targetTable: "employees",
                keys: [
                  {
                    fkColumn: "ReportsTo",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "EmployeeId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "employees",
                table: "employees",
                dirty: false,
                name: "employees_pkey",
                columns: ["EmployeeId"],
              },
            ],
          },
          {
            id: "genres",
            name: "genres",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "GenreId",
                  type: "INTEGER",
                },
              ],
              table: "genres",
              tableId: "genres",
            },
            columns: [
              {
                id: "genres.GenreId",
                name: "GenreId",
                type: "INTEGER",
                affinity: "integer",
                table: "genres",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 26,
                  name: "genres_GenreId_seq",
                },
              },
              {
                id: "genres.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "genres",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [],
            children: [
              {
                id: "tracks_GenreId_fkey",
                fkTable: "tracks",
                targetTable: "genres",
                keys: [
                  {
                    fkColumn: "GenreId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "GenreId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "genres",
                table: "genres",
                dirty: false,
                name: "genres_pkey",
                columns: ["GenreId"],
              },
            ],
          },
          {
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "InvoiceLineId",
                  type: "INTEGER",
                },
              ],
              table: "invoice_items",
              tableId: "invoice_items",
            },
            id: "invoice_items",
            name: "invoice_items",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "invoice_items.InvoiceLineId",
                name: "InvoiceLineId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 2241,
                  name: "invoice_items_InvoiceLineId_seq",
                },
              },
              {
                id: "invoice_items.InvoiceId",
                name: "InvoiceId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "invoice_items.TrackId",
                name: "TrackId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "invoice_items.UnitPrice",
                name: "UnitPrice",
                type: "NUMERIC(10,2)",
                affinity: "text",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoice_items.Quantity",
                name: "Quantity",
                type: "INTEGER",
                affinity: "integer",
                table: "invoice_items",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [
              {
                id: "invoice_items_TrackId_fkey",
                fkTable: "invoice_items",
                targetTable: "tracks",
                keys: [
                  {
                    fkColumn: "TrackId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "TrackId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
              {
                id: "invoice_items_InvoiceId_fkey",
                fkTable: "invoice_items",
                targetTable: "invoices",
                keys: [
                  {
                    fkColumn: "InvoiceId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "InvoiceId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            children: [],
            constraints: [
              {
                tableId: "invoice_items",
                table: "invoice_items",
                dirty: false,
                name: "invoice_items_pkey",
                columns: ["InvoiceLineId"],
              },
            ],
          },
          {
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "InvoiceId",
                  type: "INTEGER",
                },
              ],
              table: "invoices",
              tableId: "invoices",
            },
            id: "invoices",
            name: "invoices",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "invoices.InvoiceId",
                name: "InvoiceId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 413,
                  name: "invoices_InvoiceId_seq",
                },
              },
              {
                id: "invoices.CustomerId",
                name: "CustomerId",
                type: "INTEGER",
                affinity: "integer",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "invoices.InvoiceDate",
                name: "InvoiceDate",
                type: "DATETIME",
                affinity: "text",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoices.BillingAddress",
                name: "BillingAddress",
                type: "NVARCHAR(70)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoices.BillingCity",
                name: "BillingCity",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoices.BillingState",
                name: "BillingState",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoices.BillingCountry",
                name: "BillingCountry",
                type: "NVARCHAR(40)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoices.BillingPostalCode",
                name: "BillingPostalCode",
                type: "NVARCHAR(10)",
                affinity: "text",
                table: "invoices",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "invoices.Total",
                name: "Total",
                type: "NUMERIC(10,2)",
                affinity: "text",
                table: "invoices",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [
              {
                id: "invoices_CustomerId_fkey",
                fkTable: "invoices",
                targetTable: "customers",
                keys: [
                  {
                    fkColumn: "CustomerId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "CustomerId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            children: [
              {
                id: "invoice_items_InvoiceId_fkey",
                fkTable: "invoice_items",
                targetTable: "invoices",
                keys: [
                  {
                    fkColumn: "InvoiceId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "InvoiceId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "invoices",
                table: "invoices",
                dirty: false,
                name: "invoices_pkey",
                columns: ["InvoiceId"],
              },
            ],
          },
          {
            id: "media_types",
            name: "media_types",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "MediaTypeId",
                  type: "INTEGER",
                },
              ],
              table: "media_types",
              tableId: "media_types",
            },
            columns: [
              {
                id: "media_types.MediaTypeId",
                name: "MediaTypeId",
                type: "INTEGER",
                affinity: "integer",
                table: "media_types",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 6,
                  name: "media_types_MediaTypeId_seq",
                },
              },
              {
                id: "media_types.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "media_types",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [],
            children: [
              {
                id: "tracks_MediaTypeId_fkey",
                fkTable: "tracks",
                targetTable: "media_types",
                keys: [
                  {
                    fkColumn: "MediaTypeId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "MediaTypeId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "media_types",
                table: "media_types",
                dirty: false,
                name: "media_types_pkey",
                columns: ["MediaTypeId"],
              },
            ],
          },
          {
            id: "playlist_track",
            name: "playlist_track",
            type: "table",
            wr: 0,
            strict: 0,
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "PlaylistId",
                  type: "INTEGER",
                },
                {
                  affinity: "integer",
                  name: "TrackId",
                  type: "INTEGER",
                },
              ],
              table: "playlist_track",
              tableId: "playlist_track",
            },
            columns: [
              {
                id: "playlist_track.PlaylistId",
                name: "PlaylistId",
                type: "INTEGER",
                affinity: "integer",
                table: "playlist_track",
                nullable: false,
                default: null,
                constraints: ["f", "p"],
                identity: {
                  current: 19,
                  name: "playlist_track_PlaylistId_seq",
                },
              },
              {
                id: "playlist_track.TrackId",
                name: "TrackId",
                type: "INTEGER",
                affinity: "integer",
                table: "playlist_track",
                nullable: false,
                default: null,
                constraints: ["f", "p"],
                identity: null,
              },
            ],
            parents: [
              {
                id: "playlist_track_TrackId_fkey",
                fkTable: "playlist_track",
                targetTable: "tracks",
                keys: [
                  {
                    fkColumn: "TrackId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "TrackId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
              {
                id: "playlist_track_PlaylistId_fkey",
                fkTable: "playlist_track",
                targetTable: "playlists",
                keys: [
                  {
                    fkColumn: "PlaylistId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "PlaylistId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            children: [],
            constraints: [
              {
                tableId: "playlist_track",
                columns: ["PlaylistId", "TrackId"],
                dirty: false,
                table: "playlist_track",
                name: "playlist_track_pkey",
              },
            ],
          },
          {
            id: "playlists",
            name: "playlists",
            type: "table",
            wr: 0,
            strict: 0,

            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "PlaylistId",
                  type: "INTEGER",
                },
              ],
              table: "playlists",
              tableId: "playlists",
            },
            columns: [
              {
                id: "playlists.PlaylistId",
                name: "PlaylistId",
                type: "INTEGER",
                affinity: "integer",
                table: "playlists",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 19,
                  name: "playlists_PlaylistId_seq",
                },
              },
              {
                id: "playlists.Name",
                name: "Name",
                type: "NVARCHAR(120)",
                affinity: "text",
                table: "playlists",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [],
            children: [
              {
                id: "playlist_track_PlaylistId_fkey",
                fkTable: "playlist_track",
                targetTable: "playlists",
                keys: [
                  {
                    fkColumn: "PlaylistId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "PlaylistId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "playlists",
                table: "playlists",
                dirty: false,
                name: "playlists_pkey",
                columns: ["PlaylistId"],
              },
            ],
          },
          {
            id: "tracks",
            name: "tracks",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "tracks.TrackId",
                name: "TrackId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 3504,
                  name: "tracks_TrackId_seq",
                },
              },
              {
                id: "tracks.Name",
                name: "Name",
                type: "NVARCHAR(200)",
                affinity: "text",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "tracks.AlbumId",
                name: "AlbumId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "tracks.MediaTypeId",
                name: "MediaTypeId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "tracks.GenreId",
                name: "GenreId",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: ["f"],
                identity: null,
              },
              {
                id: "tracks.Composer",
                name: "Composer",
                type: "NVARCHAR(220)",
                affinity: "text",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "tracks.Milliseconds",
                name: "Milliseconds",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "tracks.Bytes",
                name: "Bytes",
                type: "INTEGER",
                affinity: "integer",
                table: "tracks",
                nullable: true,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "tracks.UnitPrice",
                name: "UnitPrice",
                type: "NUMERIC(10,2)",
                affinity: "text",
                table: "tracks",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [
              {
                id: "tracks_MediaTypeId_fkey",
                fkTable: "tracks",
                targetTable: "media_types",
                keys: [
                  {
                    fkColumn: "MediaTypeId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "MediaTypeId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
              {
                id: "tracks_GenreId_fkey",
                fkTable: "tracks",
                targetTable: "genres",
                keys: [
                  {
                    fkColumn: "GenreId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "GenreId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
              {
                id: "tracks_AlbumId_fkey",
                fkTable: "tracks",
                targetTable: "albums",
                keys: [
                  {
                    fkColumn: "AlbumId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "AlbumId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: true,
                  },
                ],
              },
            ],
            children: [
              {
                id: "invoice_items_TrackId_fkey",
                fkTable: "invoice_items",
                targetTable: "tracks",
                keys: [
                  {
                    fkColumn: "TrackId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "TrackId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
              {
                id: "playlist_track_TrackId_fkey",
                fkTable: "playlist_track",
                targetTable: "tracks",
                keys: [
                  {
                    fkColumn: "TrackId",
                    fkType: "INTEGER",
                    fkAffinity: "integer",
                    targetColumn: "TrackId",
                    targetType: "INTEGER",
                    targetAffinity: "integer",
                    nullable: false,
                  },
                ],
              },
            ],
            constraints: [
              {
                tableId: "tracks",
                table: "tracks",
                dirty: false,
                name: "tracks_pkey",
                columns: ["TrackId"],
              },
            ],
            primaryKeys: {
              dirty: false,
              keys: [
                {
                  affinity: "integer",
                  name: "TrackId",
                  type: "INTEGER",
                },
              ],
              table: "tracks",
              tableId: "tracks",
            },
          },
        ],
        sequences: [
          {
            colId: "AlbumId",
            tableId: "albums",
            name: "albums_AlbumId_seq",
            current: 348,
          },
          {
            colId: "ArtistId",
            tableId: "artists",
            name: "artists_ArtistId_seq",
            current: 276,
          },
          {
            colId: "CustomerId",
            tableId: "customers",
            name: "customers_CustomerId_seq",
            current: 60,
          },
          {
            colId: "EmployeeId",
            tableId: "employees",
            name: "employees_EmployeeId_seq",
            current: 9,
          },
          {
            colId: "GenreId",
            tableId: "genres",
            name: "genres_GenreId_seq",
            current: 26,
          },
          {
            colId: "InvoiceLineId",
            tableId: "invoice_items",
            name: "invoice_items_InvoiceLineId_seq",
            current: 2241,
          },
          {
            colId: "InvoiceId",
            tableId: "invoices",
            name: "invoices_InvoiceId_seq",
            current: 413,
          },
          {
            colId: "MediaTypeId",
            tableId: "media_types",
            name: "media_types_MediaTypeId_seq",
            current: 6,
          },
          {
            colId: "PlaylistId",
            tableId: "playlist_track",
            name: "playlist_track_PlaylistId_seq",
            current: 19,
          },
          {
            colId: "PlaylistId",
            tableId: "playlists",
            name: "playlists_PlaylistId_seq",
            current: 19,
          },
          {
            colId: "TrackId",
            tableId: "tracks",
            name: "tracks_TrackId_seq",
            current: 3504,
          },
        ],
      });
    });

    test("should introspect indexes correctly", async () => {
      const structure = `
        CREATE TABLE "_PermissionToRole" (
          "A" TEXT NOT NULL,
          "B" TEXT NOT NULL
        );
        CREATE UNIQUE INDEX "_PermissionToRole_AB_unique" ON "_PermissionToRole" (
          "A" ASC,
          "B" ASC
        );
        CREATE INDEX "_PermissionToRole_B_index" ON "_PermissionToRole" (
          "B" ASC
        );
      `;

      const { client } = await createTestDb(structure);

      const result = await introspectDatabase(client);

      expect(result).toEqual({
        tables: [
          {
            id: "_PermissionToRole",
            name: "_PermissionToRole",
            type: "table",
            wr: 0,
            strict: 0,
            columns: [
              {
                id: "_PermissionToRole.rowid",
                table: "_PermissionToRole",
                name: "rowid",
                type: "INTEGER",
                affinity: "integer",
                nullable: false,
                default: null,
                constraints: ["p"],
                identity: {
                  current: 1,
                  name: "_PermissionToRole_rowid_seq",
                },
              },
              {
                id: "_PermissionToRole.A",
                name: "A",
                type: "TEXT",
                affinity: "text",
                table: "_PermissionToRole",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
              {
                id: "_PermissionToRole.B",
                name: "B",
                type: "TEXT",
                affinity: "text",
                table: "_PermissionToRole",
                nullable: false,
                default: null,
                constraints: [],
                identity: null,
              },
            ],
            parents: [],
            children: [],
            constraints: [
              {
                tableId: "_PermissionToRole",
                columns: ["A", "B"],
                dirty: false,
                table: "_PermissionToRole",
                name: "_PermissionToRole_A_B_key",
              },
            ],
            primaryKeys: {
              tableId: "_PermissionToRole",
              table: "_PermissionToRole",
              dirty: false,
              keys: [
                {
                  name: "rowid",
                  type: "INTEGER",
                  affinity: "integer",
                },
              ],
            },
          },
        ],
        sequences: [
          {
            colId: "rowid",
            tableId: "_PermissionToRole",
            name: "_PermissionToRole_rowid_seq",
            current: 1,
          },
        ],
      });
    });
  },
);
