name: Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: tests-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: devenv {0}

env:
  PG_TEST_DATABASE_SERVER: postgresql://postgres:postgres@localhost:5432/postgres
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  test-type-check:
    if: github.event.pull_request.draft == false
    name: Type check
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Type check
        run: pnpm type-check

  test-lint:
    if: github.event.pull_request.draft == false
    name: Lint
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint
        run: pnpm lint

  test-lint-monorepo:
    if: github.event.pull_request.draft == false
    name: Lint monorepo
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint monorepo
        run: pnpm lint-monorepo

  test-unit-integration:
    if: github.event.pull_request.draft == false
    name: Unit and integration tests
    runs-on: buildjet-8vcpu-ubuntu-2204
    services:
      postgres:
        image: postgres:16
        credentials:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run dev API in background
        run: |
          pnpm -F @snaplet/seed run start:server &
          npx --yes wait-on -d 5000 -i 2000 -t 20000 http://localhost:3000 --log --verbose

      - name: Run unit and integration tests
        run: pnpm test

      - name: Run e2e tests
        run: pnpm test:e2e

  
  test-packing-and-install:
    if: github.event.pull_request.draft == false
    name: Packing and install tests
    runs-on: buildjet-8vcpu-ubuntu-2204
    services:
      postgres:
        image: postgres:16
        credentials:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Test pack and install
        run: |
          cd packages/seed/e2e/npm-install-test
          ./test.sh